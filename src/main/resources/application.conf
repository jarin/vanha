akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 10
    }
  }

  remote {
    # The port clients should connect to. Default is 2552.
    netty.tcp.port = 4711
  }

  http {
    server {
      server-header = akka-http/${akka.version}
      idle-timeout = 60 s
      request-timeout = 20 s
      bind-timeout = 1 s
      max-connections=1024
      pipelining-limit = 16
      remote-address-header = off
      raw-request-uri-header=off
      transparent-head-requests=on
      verbose-error-messages = on
      response-header-size-hint=512
      backlog = 101 // as the number of dalmatians
      default-host-header = ""
      # http://doc.akka.io/docs/akka/2.4.7/scala/http/configuration.html

    }


  }
  http.routing {
    verbose-error-messages = on

  }

}

